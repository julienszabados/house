##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
# 
# frozen_string_literal: true

module Twilio
  module REST
    class Authy
      class V1 < Version
        ##
        # Initialize the V1 version of Authy
        def initialize(domain)
          super
          @version = 'v1'
          @forms = nil
          @services = nil
        end

        ##
        # @param [form.FormTypes] type The Type of this Form. One of `form-app-push`,
        #   `form-sms` or `form-totp`.
        # @return [Twilio::REST::Authy::V1::FormContext] if type was passed.
        # @return [Twilio::REST::Authy::V1::FormList]
        def forms(type=:unset)
          if type.nil?
            raise ArgumentError, 'type cannot be nil'
          elsif type == :unset
            @forms ||= FormList.new self
          else
            FormContext.new(self, type)
          end
        end

        ##
        # @param [String] sid A 34 character string that uniquely identifies this Service.
        # @return [Twilio::REST::Authy::V1::ServiceContext] if sid was passed.
        # @return [Twilio::REST::Authy::V1::ServiceList]
        def services(sid=:unset)
          if sid.nil?
            raise ArgumentError, 'sid cannot be nil'
          elsif sid == :unset
            @services ||= ServiceList.new self
          else
            ServiceContext.new(self, sid)
          end
        end

        ##
        # Provide a user friendly representation
        def to_s
          '<Twilio::REST::Authy::V1>'
        end
      end
    end
  end
end